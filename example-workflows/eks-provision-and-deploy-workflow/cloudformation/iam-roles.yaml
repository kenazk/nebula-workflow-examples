---
  AWSTemplateFormatVersion: '2010-09-09'
  Description: 'Amazon EKS Service Role'
  
  
  Resources:
    EksServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub "${AWS::StackName}-eks-role"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - eks.amazonaws.com
            Action:
            - sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
          - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
    NodeInstanceRole:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
          - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        Path: /
  
  Outputs:
    ClusterRoleArn:
      Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
      Value: !GetAtt EksServiceRole.Arn
      Export:
        Name: !Sub "${AWS::StackName}-RoleArn"
    NodeInstanceRole:
      Description: The node instance role
      Value: !GetAtt NodeInstanceRole.Arn